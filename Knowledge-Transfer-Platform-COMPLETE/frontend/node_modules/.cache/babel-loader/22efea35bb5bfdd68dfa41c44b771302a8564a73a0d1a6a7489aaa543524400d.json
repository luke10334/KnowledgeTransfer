{"ast":null,"code":"import { apiService } from './apiService';\nclass AuthService {\n  async login(username, password) {\n    try {\n      const response = await apiService.login(username, password);\n      return response;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed');\n    }\n  }\n  async getCurrentUser() {\n    try {\n      const response = await apiService.getCurrentUser();\n      return response;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to get user data');\n    }\n  }\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n  logout() {\n    localStorage.removeItem('access_token');\n  }\n}\nexport const authService = new AuthService();","map":{"version":3,"names":["apiService","AuthService","login","username","password","response","error","_error$response","_error$response$data","Error","data","detail","getCurrentUser","_error$response2","_error$response2$data","getToken","localStorage","getItem","isAuthenticated","logout","removeItem","authService"],"sources":["D:/KnowledgePlatform/Knowledge-Transfer-Platform-COMPLETE/frontend/src/services/authService.js"],"sourcesContent":["import { apiService } from './apiService';\r\n\r\nclass AuthService {\r\n  async login(username, password) {\r\n    try {\r\n      const response = await apiService.login(username, password);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Login failed');\r\n    }\r\n  }\r\n\r\n  async getCurrentUser() {\r\n    try {\r\n      const response = await apiService.getCurrentUser();\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to get user data');\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('access_token');\r\n  }\r\n}\r\n\r\nexport const authService = new AuthService();\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AAEzC,MAAMC,WAAW,CAAC;EAChB,MAAMC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,UAAU,CAACE,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MAC3D,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBG,MAAM,KAAI,cAAc,CAAC;IACjE;EACF;EAEA,MAAMC,cAAcA,CAAA,EAAG;IACrB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAML,UAAU,CAACY,cAAc,CAAC,CAAC;MAClD,OAAOP,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAO,gBAAA,EAAAC,qBAAA;MACd,MAAM,IAAIL,KAAK,CAAC,EAAAI,gBAAA,GAAAP,KAAK,CAACD,QAAQ,cAAAQ,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBH,IAAI,cAAAI,qBAAA,uBAApBA,qBAAA,CAAsBH,MAAM,KAAI,yBAAyB,CAAC;IAC5E;EACF;EAEAI,QAAQA,CAAA,EAAG;IACT,OAAOC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAC7C;EAEAC,eAAeA,CAAA,EAAG;IAChB,OAAO,CAAC,CAAC,IAAI,CAACH,QAAQ,CAAC,CAAC;EAC1B;EAEAI,MAAMA,CAAA,EAAG;IACPH,YAAY,CAACI,UAAU,CAAC,cAAc,CAAC;EACzC;AACF;AAEA,OAAO,MAAMC,WAAW,GAAG,IAAIpB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}