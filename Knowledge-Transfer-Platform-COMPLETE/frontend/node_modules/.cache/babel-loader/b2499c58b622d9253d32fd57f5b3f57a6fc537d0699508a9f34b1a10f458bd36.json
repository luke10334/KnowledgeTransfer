{"ast":null,"code":"var _jsxFileName = \"D:\\\\KnowledgePlatform\\\\Knowledge-Transfer-Platform-COMPLETE\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create and export AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\n  useEffect(() => {\n    const initAuth = async () => {\n      const savedToken = localStorage.getItem('access_token');\n      if (savedToken) {\n        try {\n          // Assumes you have an authService.getCurrentUser function\n          const userData = await authService.getCurrentUser();\n          setUser(userData);\n          setToken(savedToken);\n        } catch (error) {\n          localStorage.removeItem('access_token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      const response = await authService.login(username, password);\n      localStorage.setItem('access_token', response.access_token);\n      setToken(response.access_token);\n      setUser(response.user);\n\n      // You can add toast or notification here if you use it\n      return response;\n    } catch (error) {\n      // Handle login errors if needed\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    setToken(null);\n    setUser(null);\n    // You can add toast or notification here if you use it\n  };\n  const hasPermission = requiredLevel => {\n    if (!user) return false;\n    return user.level >= requiredLevel;\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    hasPermission\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"FKcsJtAwQWnZzJm8GrIBRZp7UQw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","initAuth","savedToken","userData","authService","getCurrentUser","error","removeItem","login","username","password","response","setItem","access_token","logout","hasPermission","requiredLevel","level","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/KnowledgePlatform/Knowledge-Transfer-Platform-COMPLETE/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create and export AuthContext\r\nexport const AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const savedToken = localStorage.getItem('access_token');\r\n      if (savedToken) {\r\n        try {\r\n          // Assumes you have an authService.getCurrentUser function\r\n          const userData = await authService.getCurrentUser();\r\n          setUser(userData);\r\n          setToken(savedToken);\r\n        } catch (error) {\r\n          localStorage.removeItem('access_token');\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authService.login(username, password);\r\n\r\n      localStorage.setItem('access_token', response.access_token);\r\n      setToken(response.access_token);\r\n      setUser(response.user);\r\n\r\n      // You can add toast or notification here if you use it\r\n      return response;\r\n    } catch (error) {\r\n      // Handle login errors if needed\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    setToken(null);\r\n    setUser(null);\r\n    // You can add toast or notification here if you use it\r\n  };\r\n\r\n  const hasPermission = (requiredLevel) => {\r\n    if (!user) return false;\r\n    return user.level >= requiredLevel;\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    logout,\r\n    hasPermission,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}